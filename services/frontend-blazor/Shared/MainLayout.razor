@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main class="main">
        <div class="top-row px-4">
            <AuthorizeView>
                <Authorized>
                    <div class="d-flex align-items-center ms-auto">
                        <span class="me-3">
                            <i class="fas fa-user-circle me-1"></i>
                            Welcome, @context.User.Identity?.Name
                        </span>
                        <div class="dropdown">
                            <button class="btn btn-outline-primary dropdown-toggle btn-sm" type="button" data-bs-toggle="dropdown">
                                <i class="fas fa-cog"></i>
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="/profile"><i class="fas fa-user me-2"></i>Profile</a></li>
                                <li><a class="dropdown-item" href="/settings"><i class="fas fa-cog me-2"></i>Settings</a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li><button class="dropdown-item" @onclick="Logout"><i class="fas fa-sign-out-alt me-2"></i>Logout</button></li>
                            </ul>
                        </div>
                    </div>
                </Authorized>
            </AuthorizeView>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private async Task Logout()
    {
        // Clear authentication
        var authStateProvider = (CustomAuthenticationStateProvider)AuthenticationStateProvider;
        await authStateProvider.LogoutAsync();
        Navigation.NavigateTo("/login");
    }
}