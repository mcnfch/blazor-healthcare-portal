@page "/adjuster/providers/{ProviderId:int}"
@using Microsoft.AspNetCore.Authorization
@using BlazorApp.Services
@using BlazorApp.Models.DTOs
@attribute [Authorize]
@inject IProviderService ProviderService
@inject NavigationManager Navigation

<PageTitle>Provider Details</PageTitle>

@if (loading)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else if (provider == null)
{
    <div class="alert alert-warning">
        <i class="fas fa-exclamation-triangle me-2"></i>
        Provider not found.
    </div>
    <a href="/providers" class="btn btn-secondary">
        <i class="fas fa-arrow-left me-2"></i>Back to Providers
    </a>
}
else
{
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1><i class="fas fa-user-md me-2"></i>Provider Details</h1>
        <a href="/providers" class="btn btn-secondary">
            <i class="fas fa-arrow-left me-2"></i>Back to Providers
        </a>
    </div>

    <div class="row">
        <!-- Provider Information -->
        <div class="col-md-8">
            <div class="card mb-4">
                <div class="card-header">
                    <h5><i class="fas fa-info-circle me-2"></i>Provider Information</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <dl class="row">
                                <dt class="col-sm-5">Name:</dt>
                                <dd class="col-sm-7"><strong>@provider.ProviderName</strong></dd>
                                <dt class="col-sm-5">Provider ID:</dt>
                                <dd class="col-sm-7">@provider.ProviderId</dd>
                                <dt class="col-sm-5">Type:</dt>
                                <dd class="col-sm-7">
                                    <span class="badge bg-info">@provider.ProviderType</span>
                                </dd>
                                <dt class="col-sm-5">Status:</dt>
                                <dd class="col-sm-7">
                                    <span class="badge @(provider.IsActive ? "bg-success" : "bg-danger")">
                                        @(provider.IsActive ? "Active" : "Inactive")
                                    </span>
                                </dd>
                            </dl>
                        </div>
                        <div class="col-md-6">
                            <dl class="row">
                                @if (!string.IsNullOrEmpty(provider.PhoneNumber))
                                {
                                    <dt class="col-sm-5">Phone:</dt>
                                    <dd class="col-sm-7">
                                        <a href="tel:@provider.PhoneNumber" class="text-decoration-none">
                                            <i class="fas fa-phone me-1"></i>@provider.PhoneNumber
                                        </a>
                                    </dd>
                                }
                                @if (!string.IsNullOrEmpty(provider.Email))
                                {
                                    <dt class="col-sm-5">Email:</dt>
                                    <dd class="col-sm-7">
                                        <a href="mailto:@provider.Email" class="text-decoration-none">
                                            <i class="fas fa-envelope me-1"></i>@provider.Email
                                        </a>
                                    </dd>
                                }
                                <dt class="col-sm-5">Accepting Patients:</dt>
                                <dd class="col-sm-7">
                                    <span class="badge @(provider.IsAcceptingPatients ? "bg-success" : "bg-warning")">
                                        @(provider.IsAcceptingPatients ? "Yes" : "Not Currently")
                                    </span>
                                </dd>
                            </dl>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Specialties -->
            @if (provider.Specialties?.Any() == true)
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5><i class="fas fa-stethoscope me-2"></i>Specialties</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-flex flex-wrap gap-2">
                            @foreach (var specialty in provider.Specialties)
                            {
                                <span class="badge bg-primary fs-6">@specialty</span>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Action Panel -->
        <div class="col-md-4">
            <div class="card mb-4">
                <div class="card-header">
                    <h5><i class="fas fa-calendar-plus me-2"></i>Actions</h5>
                </div>
                <div class="card-body">
                    @if (provider.IsActive && provider.IsAcceptingPatients)
                    {
                        <div class="d-grid gap-2">
                            <button class="btn btn-success" @onclick="() => BookAppointment()">
                                <i class="fas fa-calendar-plus me-2"></i>Book Appointment
                            </button>
                            <button class="btn btn-outline-primary" @onclick="() => ContactProvider()">
                                <i class="fas fa-phone me-2"></i>Contact Provider
                            </button>
                            <a href="/claims/submit" class="btn btn-outline-success">
                                <i class="fas fa-file-medical me-2"></i>Submit Claim
                            </a>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-warning">
                            <i class="fas fa-info-circle me-2"></i>
                            This provider is @(provider.IsActive ? "not currently accepting new patients" : "inactive").
                        </div>
                        @if (provider.IsActive)
                        {
                            <button class="btn btn-outline-primary w-100" @onclick="() => ContactProvider()">
                                <i class="fas fa-phone me-2"></i>Contact Provider
                            </button>
                        }
                    }
                </div>
            </div>

            <!-- Provider Stats (Placeholder) -->
            <div class="card">
                <div class="card-header">
                    <h5><i class="fas fa-chart-bar me-2"></i>Provider Stats</h5>
                </div>
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-6">
                            <div class="border-end">
                                <h4 class="text-primary">4.8</h4>
                                <small class="text-muted">Rating</small>
                            </div>
                        </div>
                        <div class="col-6">
                            <h4 class="text-success">152</h4>
                            <small class="text-muted">Reviews</small>
                        </div>
                    </div>
                    <div class="mt-3">
                        <small class="text-muted">
                            <i class="fas fa-star text-warning"></i>
                            <i class="fas fa-star text-warning"></i>
                            <i class="fas fa-star text-warning"></i>
                            <i class="fas fa-star text-warning"></i>
                            <i class="fas fa-star text-warning"></i>
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int ProviderId { get; set; }
    
    private ProviderDto? provider;
    private bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadProvider();
    }

    private async Task LoadProvider()
    {
        try
        {
            loading = true;
            provider = await ProviderService.GetProviderByIdAsync(ProviderId);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading provider: {ex.Message}");
        }
        finally
        {
            loading = false;
        }
    }

    private async Task BookAppointment()
    {
        // In a real application, this would open a booking modal or navigate to a booking page
        await Task.Delay(100); // Placeholder for async operation
        // For now, we'll just show an alert
        await InvokeAsync(() =>
        {
            // You could use JSRuntime to show an alert or navigate to a booking system
            Navigation.NavigateTo($"/appointments/book?providerId={ProviderId}");
        });
    }

    private async Task ContactProvider()
    {
        // In a real application, this could open a contact form or initiate a call
        await Task.Delay(100); // Placeholder for async operation
        if (!string.IsNullOrEmpty(provider?.PhoneNumber))
        {
            // This would be handled by the browser
            Navigation.NavigateTo($"tel:{provider.PhoneNumber}");
        }
    }
}